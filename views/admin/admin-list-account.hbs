<body>
  <div class="main">
    <aside id="menu" class="row-cols-1 m-0 p-0">
      <form id="account-list" action="admin-list-account">
      </form>
      <form id="destination-list" action="admin-list-destination">
      </form>
      <button id="account-list" class="btn function-btn" form="account-list"><b>Tài khoản</b></button>
      <button id="destination-list" class="btn function-btn" form="destination-list"><b>Địa điểm</b></button>
    </aside>
    <div id="content">
      <div class="search-bar">
        <form class="search-form w-50 my-2 mx-2 ps-1 rounded-3 ">
          <input class="form-control border-0" type="search" placeholder="Nhập thông tin muốn tìm kiếm"
            aria-label="Search" autocomplete>
          <button class="btn" type="submit" class="float-end"><i class="fa-solid fa-magnifying-glass"></i></button>
        </form>
      </div>
      <table class=" table table-striped table-hover ">
        <thead>
          <tr>
            <th scope="col" style="width: 10%">STT</th>
            <th scope="col" style="width: 30%">Tài khoản</th>
            <th scope="col" style="width: 30%">Tên</th>
            <th scope="col" style="width: 20%">Quyền</th>
            <th style="width: 10%" class="icon">
              <img src="../images/add-icon.png" alt="add-account" onclick="openPopUp()">
            </th>
          </tr>
        </thead>

        <tbody id="accounts" class="list-group-flush">
          {{#each acc_state}}
          <tr>
            <th scope="row">{{this}}</th>
            <td>{{username}}</td>
            <td>{{name}}</td>
            <td>{{role}}</td>
            <td>
              <a href="admin-history-account">
                <img class="btn-func" src="../images/history-icon.png" action="get_his_by_id" alt="history-account">
              </a>
              <img class="mx-3 btn-func" onclick="changeState()" src="../images/unlocked-icon.png" alt="unlocked-icon"
                id="stateButton">
            </td>
          </tr>
          {{/each}}

        </tbody>
      </table>
      <div id="addAccountFrag" class="form-container">

        <img class="back-icon" src="../images/close-icon.png" onclick="closePopUp()" alt="">
        <div class="form-label text-center">
          <h2>Tài khoản</h2>
        </div>
        <form id="form-account" class="inputform" action="add_account_state">
          <label for="username">Tài khoản</label>
          <input id="username" type="text" name="username" autocomplete="on" required>
          <label for="password">Mật khẩu</label>
          <input id="password" type="password" name="password" required>
          <label for="role">Quyền</label>
          <select name="role" id="role">
            <option value="manage">Quản lý</option>
            <option value="user">Người dùng</option>
          </select>
          <button id="btn-submit" class="btn btn-success" type="submit">Xác nhận</button>
        </form>
      </div>
      <div id="list-of-resuls">
        <nav>
          <button id="page-previous" onclick="previousList()"><b>Trước</b></button>
          ...
          <button id="page-next" onClick="nextList()"><b>Tiếp</b></button>

        </nav>
      </div>
    </div>
  </div>
  <script>
    function openPopUp() {
      const addAccountFrag = document.getElementById("addAccountFrag");
      addAccountFrag.style.display = 'block';
      console.log(addAccountFrag.style.width);

    }

    function closePopUp() {
      const addAccountFrag = document.getElementById("addAccountFrag");
      addAccountFrag.style.display = 'none';
    }

    function changeState() {
      const state = document.getElementById("stateButton");
      state.src = "../images/unlocked-icon.png";
    }
  </script>

  <script>
    function getParameterByName(name, url = window.location.href) {
      name = name.replace(/[\[\]]/g, '\\$&');
      var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
      if (!results) return null;
      if (!results[2]) return '';
      return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }
    function updateURLParameter(url, param, paramVal) {
      var newAdditionalURL = "";
      var tempArray = url.split("?");
      var baseURL = tempArray[0];
      var additionalURL = tempArray[1];
      var temp = "";
      if (additionalURL) {
        tempArray = additionalURL.split("&");
        for (var i = 0; i < tempArray.length; i++) {
          if (tempArray[i].split('=')[0] != param) {
            newAdditionalURL += temp + tempArray[i];
            temp = "&";
          }
        }
      }
      var rows_txt = temp + "" + param + "=" + paramVal;
      return baseURL + "?" + newAdditionalURL + rows_txt;
    }

    function previousList() {
      var page_prev_index = parseInt(getParameterByName('page-index'), 10) - 1;
      if (page_prev_index != null) {
        if (page_prev_index >= 1) {
          var newURL = updateURLParameter(window.location.href, 'page-index', page_prev_index);
          location.replace(newURL);
        }
      }
      else {
        console.log("page-index is null");
      }

    }
    function nextList() {
      var page_next_index = parseInt(getParameterByName('page-index'), 10) + 1;
      if (page_next_index != null) {
        var newURL = updateURLParameter(window.location.href, 'page-index', page_next_index);
        location.replace(newURL);
      }
      else {
        console.log("page-index is null");
      }
    }
  </script>
</body>